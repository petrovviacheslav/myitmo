# mkdir
# 	-p - это позволяет нам создавать несколько каталогов друг в друге.
# 	-v - выводит информацию о созданном каталоге или каталогах.
# 	-m — это позволяет нам установить значение chmod/mode для нашего каталога, то есть 777.


# echo Одно назначение - выводить строку текста в терминал
#   -n - не выводить перевод строки;
#   -e - включить поддержку вывода Escape последовательностей;
#   -E - отключить интерпретацию Escape последовательностей.

# cat С помощью этой команды можно очень просто посмотреть содержимое небольшого файла, склеить несколько файлов и многое другое
#	-b - нумеровать только непустые строки;
#	-E - показывать символ $ в конце каждой строки;
#	-n - нумеровать все строки;
#	-s - удалять пустые повторяющиеся строки;
#	-T - отображать табуляции в виде ^I;
#	-h - отобразить справку;
#	-v - версия утилиты.

# touch может изменить модификацию и время доступа для любого заданного файла. Утилита создает файл только в том случае, если он ещё не существует.
# 	—versionили -v : отображает версию программы.
# 	—help: распечатывает меню справки.
# 	-a: Изменяет время доступа.
# 	-m: Изменяет время модификации.
# 	-no-dereference or -h: изменить временную метку символической ссылки. Узнайте больше о символических ссылках в Linux.
# 	—-c or –no-create:  Не создавать файл, если он не существует.
# 	–date=<string> or –d=<string>: Отметка времени изменяется в соответствии со строкой даты.
# 	–reference=<file> or –r=<file>: Отметка времени изменяется в соответствии с эталонным файлом.
# 	-t <stamp>:  изменяет метку времени. Здесь штамп имеет формат даты/времени.

# ls
# 	-a - отображать все файлы, включая скрытые, это те, перед именем которых стоит точка;
# 	-B - не выводить резервные копии, их имена начинаются с ~;
# 	-c - сортировать файлы по времени модификации или создания, сначала будут выведены новые файлы;
# 	-C - выводить колонками;
# 	-d - выводить только директории, без их содержимого, полезно при рекурсивном выводе;
# 	-H - открывать символические ссылки при рекурсивном использовании;
# 	--hide - не отображать файлы, которые начинаются с указанного символа;
# 	-i - отображать номер индекса inode, в которой хранится этот файл;
# 	-l - выводить подробный список, в котором будет отображаться владелец, группа, дата создания, размер и другие параметры;
# 	-m - разделять элементы списка запятой;
# 	-r - обратный порядок сортировки;
# 	-R - рекурсивно отображать содержимое поддиректорий;
# 	-s - выводить размер файла в блоках;
# 	-S - сортировать по размеру, сначала большие;
# 	-t - сортировать по времени последней модификации;
# 	-u - сортировать по времени последнего доступа;
# 	-X - сортировать по алфавиту;
# 	-1 - отображать один файл на одну строку.

# pwd позволяет вывести в терминал путь к текущей папке

# cd отображает имя текущего каталога или изменяет текущий каталог.
# 	-e - если папку, в которую нужно перейти не удалось найти - выдает ошибку.

# more предназначена для постраничного просмотра файлов в терминале Linux

# rm служит для удаления указанных имен файлов из каталога
# 	-f	Команда не выдает сообщений, когда удаляемый файл не существует, не запрашивает подтверждения при удалении файлов, на запись в которые нет прав. Если нет права и на запись в каталог, файлы не удаляются. Сообщение об ошибке выдается лишь при попытке удалить каталог, на запись в который нет прав (см. опцию -r).
# 	-r	Происходит рекурсивное удаление всех каталогов и подкаталогов, перечисленных в списке аргументов. Сначала каталоги опустошаются, затем удаляются. Подтверждение при удалении файлов, на запись в которые нет прав, не запрашивается, если задана опция -f или стандартный ввод не назначен на терминал и не задана опция -i. При удалении непустых каталогов команда rm -r предпочтительнее команды rmdir, так как последняя способна удалить только пустой каталог. Но команда rm -r может доставить немало острых впечатлений при ошибочном указании каталога!
# 	-i	Перед удалением каждого файла запрашивается подтверждение. Опция -i устраняет действие опции -f; она действует даже тогда, когда стандартный ввод не назначен на терминал.

# mv позволяет переименовать директории и отдельные объекты, а также перемещать их
# 	-b или —backup или —backup=МЕТОД 	Создает копию файлов, которые были перемещены или перезаписаны
# 	-f 	При активации не будет спрашивать разрешение у владельца файла, если речь идет о перемещении или переименовании файла
# 	-i 	Наоборот, будет спрашивать разрешение у владельца
# 	-n 	Отключает перезапись уже существующих объектов
# 	—strip-trailing-slashes 	Удаляет завершающий символ / у файла при его наличии
# 	-t ДИРЕКТОРИЯ 	Перемещает все файлы в указанную директорию
# 	-u 	Осуществляет перемещение только в том случае, если исходный файл новее объекта назначения
# 	-v 	Отображает сведения о каждом элементе во время обработки команды


mkdir lab0
cd lab0


echo -e '---- Step 1\n...'


touch bulbasaur4
echo "weight=15.2 height=28.0 atk=5 def=5" > bulbasaur4

mkdir gastly0
cd gastly0

mkdir rhyperior
mkdir cleffa
touch alakazam
echo -e "satk=14\nsdef=9 spd=12" > alakazam
mkdir sceptile
mkdir galvantula
touch chandelure
echo -e "Способности This is dummy text when pokemon\ndoes not contain something. It is better then NPE!" > alakazam

cd ..

mkdir lileep9
cd lileep9

touch azumarill
echo -e "Тип\nдиеты Herbivore" > azumarill
touch bidoof
echo "Развитые способности Moody" > bidoof
touch combee
echo -e "Развитые\nспособности Hustle" > combee
touch beldum
echo -e "Ходы Iron Defense Iron Head Zen\nHeadbutt" > beldum

cd ..

mkdir rapidash3
cd rapidash3

mkdir totodile
mkdir diglett
touch banette
echo "Тип диеты Nullivore" > banette

cd ..

touch silcoon3
echo -e "Развитые способности\nBattle Armor" > silcoon3
touch vigoroth1
echo -e "Тип покемона NORMAL NONE" > vigoroth1


echo -e '---- Step 1 completed!\n========================'


# chmod устанавливает права
# 	r - чтение;
# 	w - запись;
# 	x - выполнение;
# 	s - выполнение  от имени суперпользователя (дополнительный);

# 	u - владелец файла;
# 	g - группа файла;
# 	o - все остальные пользователи;

echo -e '---- Step 2\n...'


chmod 404 bulbasaur4
chmod 524 gastly0

cd gastly0
chmod 312 rhyperior
chmod 307 cleffa
chmod 604 alakazam
chmod 361 sceptile
chmod 537 galvantula
chmod 660 chandelure
cd ..

chmod 753 lileep9

cd lileep9
chmod 046 azumarill
chmod 620 bidoof
chmod 440 combee
chmod 600 beldum
cd ..

chmod 777 rapidash3

cd rapidash3
chmod 550 totodile
chmod 305 diglett
chmod 062 banette
cd ..

chmod 444 silcoon3
chmod 640 vigoroth1



echo -e '---- Step 2 completed!\n========================'




echo -e '---- Step 3\n...'

# Жесткая ссылка - это не указатель на файл, это запись каталога (файл), указывающая на тот же индекс. Даже если вы измените имя другого файла, жесткая ссылка все равно будет указывать на этот файл. Если вы замените другой файл новой версией (скопировав его), жесткая ссылка не будет указывать на новый файл. У вас могут быть только жесткие ссылки в пределах одной и той же файловой системы. С жесткими ссылками у вас нет представления об исходных файлах и ссылках, все они равны (думайте об этом как о ссылке на объект). Это концепция очень низкого уровня.

# С другой стороны, символическая ссылка фактически указывает на другой путь (имя файла); она разрешает имя файла каждый раз, когда вы обращаетесь к нему через символическую ссылку. Если вы переместите файл, символическая ссылка не будет следовать. Если вы замените файл другим, сохранив имя, символическая ссылка будет указывать на новый файл. Символические ссылки могут охватывать файловые системы. С символическими ссылками у вас есть очень четкое различие между фактическим файлом и символической ссылкой, которая не хранит никакой информации, кроме пути к файлу, на который она указывает.


# hard link
ln bulbasaur4 lileep9/beldumbulbasaur
chmod u+r lileep9/azumarill
cp -r lileep9 gastly0/rhyperior
chmod u-r lileep9/azumarill
cat lileep9/beldum gastly0/alakazam > bulbasaur4_43
ln -s vigoroth1 rapidash3/banettevigoroth 
chmod u+w gastly0
cp vigoroth1 gastly0/chandelurevigoroth

chmod u+w gastly0/galvantula
cp vigoroth1 gastly0/galvantula
chmod u-w gastly0/galvantula
chmod u-w gastly0
# soft link
ln -s rapidash3 Copy_45



echo -e '---- Step 3 completed!\n========================'


# wc может подсчитать количество строк или слов в тексте
#	-c 	--bytes 	Отобразить размер объекта в байтах
#	-m 	--count 	Показать количесто символов в объекте
#	-l 	--lines 	Вывести количество строк в объекте
#	-w 	--words 	Отобразить количество слов в объекте

# sort
# 	-b - не учитывать пробелы
# 	-d - использовать для сортировки только буквы и цифры
# 	-i - сортировать только по ASCII символах
# 	-n - сортировка строк linux по числовому значению
# 	-r - сортировать в обратном порядке
# 	-с - проверить был ли отсортирован файл
# 	-o - вывести результат в файл
# 	-u - игнорировать повторяющиеся строки
# 	-m - объединение ранее отсортированных файлов
# 	-k - указать поле по которому нужно сортировать строки, если не задано, сортировка выполняется по всей строке.
# 	-f - использовать в качестве разделителя полей ваш символ вместо пробела.

# grep
# 	-b	Предваряет каждую строку номером блока, в котором она была найдена. Это может пригодиться при поиске блоков по контексту (блоки нумеруются с 0).
# 	-c	Выдает только количество строк, содержащих образец.
# 	-h	Предотвращает выдачу имени файла, содержащего сопоставившуюся строку, перед собственно строкой. Используется при поиске по нескольким файлам.
# 	-i	Игнорирует регистр символов при сравнениях.
# 	-l	Выдает только имена файлов, содержащих сопоставившиеся строки, по одному в строке. Если образец найден в нескольких строках файла, имя файла не повторяется.
# 	-n	Выдает перед каждой строкой ее номер в файле (строки нумеруются с 1).
# 	-s	Подавляет выдачу сообщений о не существующих или недоступных для чтения файлах.
# 	-v	Выдает все строки, за исключением содержащих образец.
#	-w	Ищет выражение как слово, как если бы оно было окружено метасимволами \< и \>.

echo -e '---- Step 4\n...'

echo '---- 4.1 ---- (Подсчитать количество строк содержимого файлов: alakazam, chandelure, azumarill, bidoof, combee, beldum, результат записать в файл в директории /tmp, подавить вывод ошибок доступа)'
wc -l gastly0/alakazam gastly0/chandelure lileep9/azumarill lileep9/bidoof lileep9/combee lileep9/beldum >/tmp/total 2>/dev/null
echo '---- 4.2 ---- (Вывести три первых элемента рекурсивного списка имен и атрибутов файлов в директории lab0, заканчивающихся на символ "a", список отсортировать по убыванию размера, подавить вывод ошибок доступа)'
ls -lRS 2>/dev/null | grep 'a$' | head -n3
echo '---- 4.3 ---- (Рекурсивно вывести содержимое файлов из директории lab0, имя которых заканчивается на 'a', строки отсортировать по имени a->z, добавить вывод ошибок доступа в стандартный поток вывода)'
cat *a **/*a **/**/*a | sort
echo '---- 4.4 ---- (Подсчитать количество символов содержимого файлов: azumarill, bidoof, отсортировать вывод по уменьшению количества, ошибки доступа перенаправить в файл в директории /tmp)'
wc -m lileep9/azumarill lileep9/bidoof 2>/tmp/error | sort -r
echo '---- 4.5 ---- (Вывести два последних элемента рекурсивного списка имен и атрибутов файлов в директории lab0, список отсортировать по возрастанию количества жестких ссылок, ошибки доступа не подавлять и не перенаправлять)'
ls -l | tail -n3 | head -n2 | sort -nk2
echo '---- 4.6 ---- (Вывести рекурсивно список имен и атрибутов файлов в директории rapidash3, список отсортировать по возрастанию даты изменения записи о файле, добавить вывод ошибок доступа в стандартный поток вывода)'
ls -ltr rapidash3/ 2>&1



echo -e '---- Step 4 completed!\n========================'


echo -e '---- Step 5\n...'


rm vigoroth1

chmod +w gastly0
rm gastly0/chandelure
rm Copy_*
rm lileep9/beldumbulbasa*
chmod +w gastly0/galvantula
chmod +r gastly0/rhyperior
# rm -rf gastly0
rm -rf rapidash3/diglett




echo -e '---- Step 5 completed!\n========================'

echo -e 'Completed\n'
